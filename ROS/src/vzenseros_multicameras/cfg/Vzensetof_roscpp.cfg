#!/usr/bin/env python
PACKAGE = "vzense_param"

from dynamic_reconfigure.parameter_generator_catkin import *
 
gen = ParameterGenerator()

ActiveMode = gen.const("ActiveMode", int_t, 0, "ActiveMode")
HardwareTriggerMode = gen.const("HardwareTriggerMode", int_t, 1, "HardwareTriggerMode")
SoftwareTriggerMode = gen.const("SoftwareTriggerMode", int_t, 2, "SoftwareTriggerMode")
WorkMode = gen.enum([ActiveMode, HardwareTriggerMode,SoftwareTriggerMode],"WorkMode")

RGBResloution0 = gen.const("1600_1200", int_t, 0, "1600_1200")
RGBResloution1 = gen.const("800_600", int_t, 1, "800_600")
RGBResloution2 = gen.const("640_480", int_t, 2, "640_480")
RGBResloution = gen.enum([RGBResloution0, RGBResloution1,RGBResloution2],"RGBResloution")

group_tof = gen.add_group("Camera ToF", type="hide", state=True)
group_tof.add("FrameRate",int_t,0,"An Int Parameter",10,1,25)
group_tof.add("IRGMMGain",int_t,0,"An Int Parameter",125,0,255)
group_tof.add("RGBResloution", int_t, 0, "RGBResloution", 2, 0, 2,edit_method=RGBResloution)
group_tof.add("HDRMode",bool_t,0,"A Bool Parameter",True)
group_tof.add("ToFManual",bool_t,0,"A Bool Parameter",True)
group_tof.add("ToFExposureTime",int_t,0,"An Int Parameter",1000,60,4000)
group_tof.add("RGBManual",bool_t,0,"A Bool Parameter",False)
group_tof.add("RGBExposureTime",int_t,0,"An Int Parameter",1000,100,30000)
group_tof.add("WorkMode", int_t, 0, "WorkMode", 0, 0, 2,edit_method=WorkMode)
group_tof.add("SoftwareTrigger",bool_t,0,"A Bool Parameter",False)

exit(gen.generate(PACKAGE,"vzense_manager","Vzensetof_roscpp"))   